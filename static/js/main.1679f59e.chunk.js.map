{"version":3,"sources":["state/ducks/scidata/index.tsx","state/ducks/scidata/reducers.tsx","state/ducks/scidata/schema/index.tsx","state/ducks/scidata/constants/schemaList.js","state/ducks/scidata/config.js","views/components/SciDataTab.jsx","views/components/SciDataTabPanel.jsx","views/components/SciDataTabs.js","state/ducks/scidata/uischema/index.tsx","state/ducks/scidata/datasets.js","index.tsx","state/store.js"],"names":["reducer","combineReducers","jsonforms","jsonformsReducer","schemas","context","dataset","parameter","resource","unit","value","schemaList","generateSchemaResolver","name","schema","order","canRead","file","url","indexOf","read","JSON","stringify","ajv","createAjv","useDefaults","resolvers","i","length","addSchema","jsonFormsConfiguration","refParserOptions","resolve","SciDataTab","_this$props","this","props","title","isActive","changeTab","react_default","a","createElement","Menu","Item","key","active","onClick","as","React","Component","SciDataTabPanel","display","activeItem","changeChildTab","pointing","secondary","Segment","Array","prototype","contains","element","SciDataTabs","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","childActiveItem","childDisplay","renderJsonForm","defaultDisplay","methodChoices","dataChoices","bind","assertThisInitialized","renderTabFromDataset","renderTabs","tabName","setState","_this2","SciDataTab_SciDataTab","formName","console","log","_this3","react_lib","data","uischema","path","Button","content","color","submitForm","datasets","filter","obj","undefined","dataForDataset","SciDataTabPanel_SciDataTabPanel","choices","_this4","map","renderActiveTabPanel","methodTabs","dataTabs","Grid","Column","width","fluid","vertical","tabular","Container","header","Divider","stretched","connect","getData","uischemas","createSchemaDataset","store","initialState","createStore","rootReducer","dispatch","Actions","init","scidataJsonFormsConfiguration","configureStore","cells","materialCells","renderers","materialRenderers","render","es","components_SciDataTabs","document","getElementById"],"mappings":"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","file":"static/js/main.1679f59e.chunk.js","sourcesContent":["import reducer from \"./reducers\";\n\nexport default reducer;","import { combineReducers} from 'redux';\nimport { jsonformsReducer } from '@jsonforms/core';\n\nconst reducer = combineReducers({ \n        jsonforms: jsonformsReducer()\n});\n\nexport default reducer;\n","import contextSchema from './context.json';\nimport datasetSchema from './dataset.json';\nimport parameterSchema from './parameter.json';\nimport resourceSchema from './resource.json';\nimport unitSchema from './unit.json';\nimport valueSchema from './value.json';\n\nconst schemas = {\n    context: contextSchema,\n    dataset: datasetSchema,\n    parameter: parameterSchema,\n    resource: resourceSchema,\n    unit: unitSchema,\n    value: valueSchema,\n}\n\nexport default schemas;","export default [\n    'dataset',\n    'parameter',\n    'resource',\n    'unit', \n    'value',\n]","import { createAjv } from \"@jsonforms/core\";\nimport schemas from './schema';\nimport schemaList from './constants/schemaList';\n\nfunction generateSchemaResolver(name, schema) {\n  return {\n    order: 1,\n    canRead: function(file) {\n        return file.url.indexOf(name + '.json') !== -1;\n    },\n    read: function() {\n        return JSON.stringify(schema)\n    }\n  }\n}\n\n// Combined schema validator and schema resolver\nconst ajv = createAjv({useDefaults: true});\nvar resolvers = {'context': generateSchemaResolver('context', schemas['context'])};\nfor( var i = 0; i < schemaList.length; i++) {\n  const name = schemaList[i];\n  ajv.addSchema(schemas[name], name + '.json');\n  resolvers[name] = generateSchemaResolver(name, schemas[name]);\n}\n\n// JSONForms configuration for Redux Store\nconst jsonFormsConfiguration = {\n  ajv: ajv,\n  refParserOptions: {\n    resolve: resolvers\n  }\n};\n\nexport default jsonFormsConfiguration;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Menu } from \"semantic-ui-react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\n// Tab Component\nexport default class SciDataTab extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    title: PropTypes.string,\n    isActive: PropTypes.bool,\n    changeTab: PropTypes.func\n  };\n\n  render() {\n    const { name, title, isActive, changeTab } = this.props;\n\n    return (\n      <Menu.Item key={name} active={isActive} onClick={changeTab} as=\"a\">\n        {title}\n      </Menu.Item>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Menu, Segment } from \"semantic-ui-react\";\n\nexport default class  SciDataTabPanel extends React.Component {\n    static propTypes = {\n      display: PropTypes.node,\n      activeItem: PropTypes.string,\n      changeChildTab: PropTypes.func\n    };\n  \n    render () {\n      const {\n        display,\n        activeItem,\n        changeChildTab\n      } = this.props;\n  \n      return (\n        <div>\n          <Menu pointing secondary>\n            <Menu.Item\n              name=\"Input\"\n              active={activeItem === \"Input\"}\n              onClick={() => changeChildTab(\"Input\")}\n            />\n            <Menu.Item\n              name=\"JSON-LD\"\n              active={activeItem === \"JSON-LD\"}\n              onClick={() => changeChildTab(\"JSON-LD\")}\n            />\n          </Menu>\n  \n          <Segment>{display}</Segment>\n        </div>\n      );\n    }\n  }","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Grid, Menu, Button, Container, Divider } from \"semantic-ui-react\";\nimport { JsonForms } from \"@jsonforms/react\";\nimport { getData } from \"@jsonforms/core\";\n\nimport SciDataTab from \"./SciDataTab\";\nimport SciDataTabPanel from \"./SciDataTabPanel\";\n\nArray.prototype.contains = function(element) {\n  return this.indexOf(element) > -1;\n};\n\n// Tabs Component\nclass SciDataTabs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeItem: \"\",\n      childActiveItem: \"Input\",\n      childDisplay: this.renderJsonForm({}, {}, \"\")\n    };\n\n    this.defaultDisplay = <h1> </h1>;\n    this.methodChoices = [\n      \"basisset\",\n      \"calculation\",\n      \"measurement\",\n      \"methodology\",\n      \"procedure\",\n      \"resource\",\n      \"software\"\n    ];\n    this.dataChoices = [\"dataset\", \"parameter\", \"unit\", \"value\"];\n\n    this.changeTab = this.changeTab.bind(this);\n    this.changeChildTab = this.changeChildTab.bind(this);\n    this.renderTabFromDataset = this.renderTabFromDataset.bind(this);\n    this.renderTabs = this.renderTabs.bind(this);\n  }\n\n  static propTypes = {\n    datasets: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        path: PropTypes.string,\n        title: PropTypes.string,\n        schema: PropTypes.shape({\n          properties: PropTypes.object,\n          title: PropTypes.string,\n          type: PropTypes.string\n        }),\n        uischema: PropTypes.shape({\n          elements: PropTypes.arrayOf(PropTypes.object),\n          label: PropTypes.string,\n          type: PropTypes.string\n        })\n      })\n    )\n  };\n\n  changeTab(tabName) {\n    this.setState({\n      activeItem: tabName\n    });\n  }\n\n  changeChildTab(tabName) {\n    this.setState({\n      childActiveItem: tabName\n    });\n  }\n\n  renderTabFromDataset(dataset) {\n    const activeItem = this.state.activeItem;\n    const isActive = activeItem === dataset.name ? true : false;\n    return (\n      <SciDataTab\n        key={dataset.name}\n        name={dataset.name}\n        title={dataset.title}\n        isActive={isActive}\n        changeTab={() => this.changeTab(dataset.name)}\n      />\n    );\n  }\n\n  submitForm(formName) {\n    console.log(\"Form \" + formName + \" submitted!\");\n  }\n\n  renderJsonForm(dataset) {\n    return (\n      <div>\n        <JsonForms\n          key={dataset.name}\n          data={dataset.data}\n          schema={dataset.schema}\n          uischema={dataset.uischema}\n          path={dataset.path}\n        />\n        <Button\n          content=\"Submit\"\n          color=\"red\"\n          onClick={() => this.submitForm(dataset.name)}\n        />\n      </div>\n    );\n  }\n\n  renderActiveTabPanel() {\n    const activeItem = this.state.activeItem;\n    const datasets = this.props.datasets;\n    if (datasets.length === 0) return;\n    const activeDatasetArray = datasets.filter(obj => activeItem === obj.name);\n    const dataset = activeDatasetArray[0];\n\n    const childActiveItem = this.state.childActiveItem;\n\n    if (dataset === undefined) {\n      return this.defaultDisplay;\n    }\n\n    const dataForDataset = this.props.data[dataset.path];\n\n    var display;\n    if (childActiveItem === \"Input\") {\n      display = this.renderJsonForm(dataset);\n    } else {\n      display = JSON.stringify(dataForDataset, null, 2);\n    }\n\n    return (\n      <SciDataTabPanel\n        activeItem={childActiveItem}\n        display={display}\n        changeChildTab={this.changeChildTab}\n      />\n    );\n  }\n\n  renderTabs(choices) {\n    const datasets = this.props.datasets;\n    const selection = datasets.filter(obj => choices.contains(obj.name));\n    const tabs = selection.map(dataset => this.renderTabFromDataset(dataset));\n    return tabs;\n  }\n\n  render() {\n    const display = this.renderActiveTabPanel();\n    const methodTabs = this.renderTabs(this.methodChoices);\n    const dataTabs = this.renderTabs(this.dataChoices);\n\n\n    console.log(\"datasets\", this.props.datasets);\n    //const myArray = this.createTabs();\n    return (\n      <div>\n        <Grid>\n          <Grid.Column width={4}>\n            <Menu fluid vertical tabular>\n              <Container>\n              <Menu.Item header>METHOD</Menu.Item>\n                <Divider />\n                {methodTabs}\n                <Menu.Item header>DATA</Menu.Item>\n                <Divider />\n                {dataTabs}\n              </Container>\n            </Menu>\n          </Grid.Column>\n\n          <Grid.Column stretched width={12}>\n            {display}\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { data: getData(state) };\n};\n\nexport default connect(mapStateToProps)(SciDataTabs);\n","import datasetUiSchema from './dataset.json';\nimport parameterUiSchema from './parameter.json';\nimport unitUiSchema from './unit.json';\nimport valueUiSchema from './value.json';\n\n\nconst uischemas = {\n    dataset: datasetUiSchema,\n    parameter: parameterUiSchema,\n    unit: unitUiSchema,\n    value: valueUiSchema,\n}\n\nexport default uischemas;","\nimport schemas from './schema';\nimport uischemas from './uischema';\nimport schemaList from './constants/schemaList';\n\nfunction createSchemaDataset(name, schema, uischema) {\n    return {\n        name: name,\n        path: name,\n        title: name,\n        schema: schema,\n        uischema: uischema,\n        data: {}\n    }\n}\n\nconst datasets = schemaList.map(name => createSchemaDataset(name, schemas[name], uischemas[name]));\n\nexport default datasets;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { JsonFormsState } from '@jsonforms/core';\nimport { materialCells, materialRenderers } from '@jsonforms/material-renderers';\n\nimport configureStore from './state/store';\nimport SciDataTabs from './views/components/SciDataTabs';\nimport datasets from './state/ducks/scidata/datasets';\n\nconst sciDataInitialState: JsonFormsState = {\n  jsonforms: {\n    cells: materialCells,\n    renderers: materialRenderers\n  }\n};\n\nconst store = configureStore(sciDataInitialState);\n\nconst App = () => (\n  <Provider store={store}>\n    <SciDataTabs\n      datasets={datasets}\n    />\n  </Provider>\n);\n\n\nrender(<App />, document.getElementById('root'));\n\n","import { createStore } from \"redux\";\nimport { Actions } from \"@jsonforms/core\";\n\n//import * as reducers from \"./ducks\";\nimport { default as rootReducer } from \"./ducks/scidata\";\n\nimport { default as scidataJsonFormsConfiguration } from \"./ducks/scidata/config\";\n\nexport default function configureStore(initialState) {\n  //const rootReducer = combineReducers( reducers );\n\n  const store = createStore(rootReducer, initialState);\n\n  // Combine sub-schema to single for intial store\n  const data = {};\n  const schema = {};\n  const uischema = {};\n\n  store.dispatch(\n    Actions.init(data, schema, uischema, scidataJsonFormsConfiguration)\n  );\n\n  return store;\n}\n"],"sourceRoot":""}